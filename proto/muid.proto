syntax = "proto3";
package gink;

/**
    Muid: globally unique object-id in the Gink system.
    See also the documentation in docs/muid.md

    The "Mu" comes from the symbol Âµ (micro), so this could also be called Micro-Id,
    chosen because the IDs contain an embedded micro-second timestamp.

    * The timestamp and medallion may be omitted (=0) in muids found inside
      rows when they point to another row in the same commit.

    * The medallion may be omitted (=0) for a muid that points to a row
      from the same stream.

    * The offset value of 0 (omitted) referrs to the commit.

    The limits specified below allow a Muid to be packed into a canonical
    16 byte representation: effectively a 128-bit integer that
    corresponds to (timestamp << 72) + (medallion << 20) + offset,
    encoded big-endian.

    14 hex-digit time,  13 hex-digit medallion, 5 hex-digit offset
    TTTTTTTTTTTTTTMMMMMMMMMMMMMOOOOO

    ^ This representation works for timestamps up to the year 4253, though
    languages like Javascript that only have doubles may have trouble with
    microseconds timestamps past the year 2255 (2**53).

    The timestamp field and/or the medallion field can be set to -1 to reference
    "global" objects, which can be used for testing or bootstrapping.
*/

message Muid {
    sint64 timestamp = 1; // microseconds since epoch
    sint64 medallion = 2; // less than 2**52, version 1 between 2**48 and 2**49, exclusive
    uint32 offset = 3; // less than 2**20 (== 16**5)
}
