syntax = "proto3";
package google.gink;
import "key.proto";

message Value {
    oneof value {
        Special special = 1;
        string characters = 3;
        Number number = 4;
        Timestamp timestamp = 5;
        Date date = 6;
        Time time = 7;
        bytes octets = 8;
        Tuple tuple = 11;
        Document document = 12;
        bytes uuid = 16;
        Zone timezone = 19;
        DateTime datetime = 20;
        ZonedDateTime zoned = 21;
        Interval interval = 22;
    }

    // Allowing muid user values would make questions like "Is <muid> in <sequence>?" ambiguous.
    // But I'm keeping them reserved here for the moment just in case we decide to put it back in.
    reserved 15, 17, 2, 13;
    reserved "proto_data", "muid", "enum_value", "symbol";

    enum Special {
        MISSING = 0;
        TRUE = 1;
        FALSE = 2;
        NULL = 3;
    }

    message Timestamp {
        bool negative = 1;
        uint64 seconds = 2;
        uint64 millis = 3;
        uint64 micros = 4;
        uint64 nanos = 5;
    }

    message Tuple {
        repeated Value values = 1;
    }

    message Document {
        // keys and values must be the same length
        repeated Key keys = 1;
        repeated Value values = 2;
    }

    message Number {
        enum Constant {
            UNKNOWN = 0;
            I = 1;
            E = 2;
            PI = 3;
        }
        oneof encoded {
            sint32 integer = 1;
            sint64 bigint = 2;
            float floating = 3;
            double doubled = 4;
            Constant constant = 5;
        }
    }


    message Date {
        uint32 year = 1;
        uint32 month = 2;
        uint32 day = 3;
    }

    message Time {
        uint32 hour = 1;
        uint32 minute = 2;
        uint32 second = 3;
        uint32 milli = 4;
        uint32 micro = 5;
        uint32 nano = 6;
    }

    message Zone {
        oneof zone {
            ZoneOffset offset = 1;
            string full_name = 2; // e.g. "America/New_York"
            string abbreviation = 3; // e.g. "PST"
        }
    }

    message ZoneOffset {
        bool minus = 1;
        uint32 hours = 2;
        uint32 minutes = 3;
    }

    message Interval {
        bool minus = 1;
        uint64 hours = 2;
        uint64 minutes = 3;
        uint64 seconds = 4;
        uint64 millis = 5;
        uint64 micros = 6;
        uint64 nanos = 7;
        uint64 days = 8;
        uint64 months = 9;
        uint64 years = 10;
    }

    message DateTime {
        Date date = 1;
        Time time = 2;
    }

    message ZonedDateTime {
        Date date = 1;
        Time time = 2;
        Zone zone = 3;
    }

}
